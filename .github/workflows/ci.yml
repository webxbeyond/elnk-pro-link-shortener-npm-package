name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - develop
  workflow_dispatch: # Allow manual triggering

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Check package contents
      run: npm pack --dry-run

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14, 16, 18, 20]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run build
      run: npm run build

    - name: Test package import (CommonJS)
      run: node -e "const pkg = require('./index'); console.log('‚úÖ CommonJS import works:', typeof pkg)"

    - name: Test package import (ES Module)
      run: node -e "import('./index.js').then(pkg => console.log('‚úÖ ES Module import works:', typeof pkg.default))"

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Check for outdated dependencies
      run: npm outdated || true

  package-size:
    name: Package Size Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check package size
      run: |
        npm pack
        PACKAGE_SIZE=$(ls -la *.tgz | awk '{print $5}')
        echo "üì¶ Package size: $PACKAGE_SIZE bytes"
        
        # Convert to KB for easier reading
        PACKAGE_SIZE_KB=$((PACKAGE_SIZE / 1024))
        echo "üì¶ Package size: ${PACKAGE_SIZE_KB}KB"
        
        # Warn if package is too large (>50KB is unusual for a utility package)
        if [ $PACKAGE_SIZE_KB -gt 50 ]; then
          echo "‚ö†Ô∏è Warning: Package size is quite large (${PACKAGE_SIZE_KB}KB)"
        else
          echo "‚úÖ Package size looks good (${PACKAGE_SIZE_KB}KB)"
        fi

  framework-compatibility:
    name: Framework Compatibility
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test framework compatibility
      run: |
        if [ -f "framework-tests/compatibility-test.js" ]; then
          node framework-tests/compatibility-test.js
        else
          echo "‚ö†Ô∏è Framework compatibility tests not found"
        fi

    - name: Test module system compatibility
      run: |
        if [ -f "framework-tests/final-module-test.js" ]; then
          node framework-tests/final-module-test.js
        else
          echo "‚ö†Ô∏è Module system tests not found"
        fi
