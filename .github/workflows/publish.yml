name: Publish to NPM

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18, 20]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Check build
      run: npm run build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org/'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (final check)
      run: npm test

    - name: Build package
      run: npm run build

    - name: Check package contents
      run: npm pack --dry-run

    - name: Get package info
      id: package
      run: |
        echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Check if version exists on npm
      id: check-version
      run: |
        if npm view ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }} version 2>/dev/null; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true

    - name: Publish to npm (dry-run)
      if: steps.check-version.outputs.exists == 'true'
      run: |
        echo "Version ${{ steps.package.outputs.version }} already exists on npm"
        echo "Skipping publication"
        npm publish --dry-run

    - name: Publish to npm
      if: steps.check-version.outputs.exists == 'false'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub release
      if: steps.check-version.outputs.exists == 'false' && !startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package.outputs.version }}
        release_name: Release v${{ steps.package.outputs.version }}
        body: |
          ## Changes in v${{ steps.package.outputs.version }}
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md) for detailed changes.
          
          ### Installation
          ```bash
          npm install ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }}
          ```
        draft: false
        prerelease: false

    - name: Post-publish notification
      if: steps.check-version.outputs.exists == 'false'
      run: |
        echo "‚úÖ Successfully published ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }} to npm"
        echo "üì¶ Package: https://www.npmjs.com/package/${{ steps.package.outputs.name }}"
        echo "üè∑Ô∏è Version: ${{ steps.package.outputs.version }}"
